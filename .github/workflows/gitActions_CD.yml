name: docker-ec2

on:
  push:
    branches: ["main"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # gradle caching - 빌드 시간 향상
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # gradlew 권한 설정
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # jar Build 하기
      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Log into Dockerhub
        run : |
          docker login -u ${{ secrets.DOCKER_EMAIL }} -p ${{ secrets.DOCKER_PASSWORD }}

      # docker build & push
      # Dockerfile을 통해 이미지화
      # push to docker hub
      - name: Docker build & push to dev
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/moit . 
          docker push ${{ secrets.DOCKER_USERNAME }}/moit

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH into the server and deploy
        uses: appleboy/ssh-action@v0.1.7
        env:
          PROD_DB_URL: ${{ secrets.PROD_DB_URL }}
          PROD_DB_USERNAME: ${{ secrets.PROD_DB_USERNAME }}
          PROD_DB_PASSWORD: ${{ secrets.PROD_DB_PASSWORD }}
          PROD_REDIS_URL: ${{ secrets.PROD_REDIS_URL }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
          NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
          NAVER_SECURITY_REDIRECT_URI: ${{ secrets.NAVER_SECURITY_REDIRECT_URI }}
          NAVER_REDIRECT_URI: ${{ secrets.NAVER_REDIRECT_URI }}
          KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
          KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
          KAKAO_REDIRECT_URI: ${{ secrets.KAKAO_REDIRECT_URI }}
          KAKAO_ADMIN_KEY: ${{ secrets.KAKAO_ADMIN_KEY }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker-compose down
            docker-compose up -d